# Building with meson:

Get meson 0.59, either from your distro's package manager, or using pip:

```
python3 -m pip install meson --user
```

Get ninja from a package manager (dnf, pacman, brew, ..) on Linux
and MacOS, or with the installer on Windows, then in FFmpeg:

```
meson build && ninja -C build
```

Build FFmpeg without external dependencies:
```
meson --auto-features=disabled build && ninja -C build
```

Known to build on Debian, Arch Linux, Windows, and macOS High Sierra.

# Running the tests:

```
meson test -C build
```

# Updating the FFmpeg base snapshot of the Meson port

It's complicated and at the moment not fully documented. It should only be
needed when updating from one feature version to another, not for minor bug fix
releases (assuming there aren't too many changes in `configure` between minor
bug fix releases).

## Updating the tag

The procedure is as follows. First, merge the new tag `nMAJOR.MINOR.PATCH` into
the `meson-MAJOR.MINOR` branch with the `ort` strategy and `theirs` option.
For instance, if updating to `n5.1.3`,

```sh
git merge -Xtheirs n5.1.3 --no-commit
```

This will automatically resolve conflicts to prefer the incoming tag's state,
but if you're moving between minor versions, it **will result in broken
files**. You can fix that by backporting the tag's state:

```sh
git diff n5.1.3 HEAD <folder or file> |Â patch -p1
```

Once done, hit `git commit` and make sure the message is a merge commit and that 
it looks like:

```
Merge tag 'n5.1.3' into meson-5.1

FFmpeg 5.1 release
```

## Updating the Meson port

Once done, you need to apply the following generation scripts, usually with `py 
-3`. Then replace the current generated files with them, but make sure to bring
back in the manual changes (that's the tedious part).

- `parse_sources.py` updates the meson.build files trying to keep manually
  written parts as specified by the `#### --- [END] GENERATED --- ####`
  specifiers

- `find_things_extern.py` and `find_things.py` update the meson_options.txt file 
  trying to keep manually written parts as specified by the
  `#### --- [END] GENERATED [EXTERN|FILTER] OPTIONS --- ####` specifiers,
  respectively
  - run the scripts with the flag `--update-options` to trigger the update

- `recursive_selects.py` works in place, but you need to check the diff and
  revert some of the changes.

Finally, bump versions and check what changed in `configure` since the last
time, which is the other complicated bit, as it requires understanding of the
somewhat complex ffmpeg build system and of the way it was reimplemented
for the Meson port. Some documentation of that is at the top of `depgraph.py`.

Good luck!
